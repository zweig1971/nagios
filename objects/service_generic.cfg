;----------------
; service.cfg
; service: w (warning), u (unknown), c (critical), f (flapping), n (none), r (recover)
;----------------


define service {
        use                     longtime-service
        name                    CMP Time-Date Master/Node
        service_description     Info: Host date/time synched status
        check_command           cmp_time_master_node
        hostgroup_name          CryringWRS, ProductiveWRS, TestingWRS, CryringNodesVme, CryringNodesPex, CryringNodesScu\
                                , ProductiveNodesPex, ProductiveNodesSCU, TestingNodesPex, TestingNodesScu				
        }


define service {
        use                     longtime-service
        name                    WRS Time-Date
        service_description     Info: Host date/time
        check_command           timing_read_time_date
        hostgroup_name          CryringWRS, ProductiveWRS, TestingWRS
        }


define service {
        use                     longtime-service
        name                    WRS-CLOCK-MASTER
        service_description     Info: Host rank
        check_command           timing_check_clock_master
        hostgroup_name          CryringWRS, ProductiveWRS, TestingWRS
        }



define service {
        use                     generic-service
        name                    TRACK-Check
        service_description     Info: Host Track phase status 
        check_command           timing_track
        hostgroup_name          CryringNodesScu, CryringNodesVme, CryringNodesPex
	}


define service {
        use                     longtime-service
        name                    NODE DATE
        service_description     Info: Host date/time 
        check_command           timing_date
        hostgroup_name          CryringNodesScu, CryringNodesVme, CryringNodesPex
	}


;define service {
;        use                     generic-service
;        name                    Status-Check
;        service_description     Status information
;        check_command           read_timing_status
;        hostgroup_name          CryringNodesScu, CryringNodesVme
;        }


define service {
        use                     generic-service
        name                    TCP-Check
        service_description     Info: Host TCP status 
        check_command           check_tcp
        hostgroup_name          CryringWRS, ProductiveWRS, TestingWRS 
        }


define service {
        use                     generic-service
        name                    PING
        service_description     Info: Host online status
        check_command           check_alive
        hostgroup_name          CryringNodesVme, CryringNodesPex, CryringNodesScu, ProductiveWRS\
				, ProductiveNodesPex, ProductiveNodesSCU, TestingNodesPex, TestingNodesScu
        }


define service {
        use                     generic-service
        name                    TRACK PHASE
        service_description     Info: Host Track phase status
        check_command           wr-snmp-ppsi-track
        hostgroup_name          CryringWRS, ProductiveWRS, TestingWRS
        }


define service {
        use                     longtime-service
        name                    WRS Info
        service_description     Info: Host White Rabbit Version
        check_command           read_wrs_info
        hostgroup_name          CryringWRS, ProductiveWRS, TestingWRS
        }


define service {
        use                     longtime-service
	check_interval          10
        name                    Comment Line
        service_description     Info: Host information line
        check_command           read_command
        hostgroup_name          CryringNodesVme, CryringNodesScu, CryringNodesPex, CryringWRS\
				, ProductiveWRS, ProductiveNodesPex, TestingWRS, TestingNodesPex
        }


;define service {
;        use                     generic-service
;        name                    SCU Status 
;        service_description     SCU health condition
;        check_command           check_scu_status
;        hostgroup_name          CryringNodesScu, ProductiveNodesSCU, TestingNodesScu
;        }


define service {
        use                     generic-service
        name                    Pexaria Status
        service_description     Info: Pexaria health condition
        check_command           check_pex_status
        hostgroup_name          CryringNodesPex, ProductiveNodesPex, TestingNodesPex
        }


;define service {
;        use                     generic-service
;        name                    SCU Info
;        service_description     SCU information
;        check_command           read_scu_info
;        hostgroup_name          CryringNodesScu, ProductiveNodesSCU, TestingNodesScu
;        }


define service {
        use                     longtime-service
        name                    Pexaria Info
        service_description     Info: Pexaria information
        check_command           read_pex_info
        hostgroup_name          CryringNodesPex, ProductiveNodesPex, TestingNodesPex
        }


